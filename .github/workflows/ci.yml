---
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  terraform:
    name: Terraform CI/CD
    uses: melorga-portfolio/gha-workflows/.github/workflows/terraform.yml@main
    with:
      terraform_version: '1.8.5'
      working_directory: './infrastructure'
      environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
      auto_apply: ${{ github.ref == 'refs/heads/main' }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov boto3 moto
          if [ -f backend/generate-recipe/requirements.txt ]; then
            pip install -r backend/generate-recipe/requirements.txt
          fi
      
      - name: Run tests
        run: |
          pytest tests/ -v --cov=backend/generate-recipe --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage.xml

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.8.5'
      
      - name: Generate terraform-docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: infrastructure
          output-file: README.md
          output-method: inject
          git-push: "true"
